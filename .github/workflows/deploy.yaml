name: 'Build and Deploy'
on:
  workflow_dispatch:
    inputs:
      app_version:
        type: number
        description: App version

env:
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: './terragrunt'
  app_name: "profile"

jobs:
  build:
    name: 'Docker build'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Generate authorized_key.json'
        run: echo $AUTHORIZED_KEY ${{ env.tf_working_dir }}/authorized_key.json

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v2

      - name: 'Login to Yandex Registry'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.registry_id }}
          username: json_key
          password: ${{ secrets.authorized_key }}

      - name: 'Build and Push Docker Image'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: "${{ secrets.registry_id }}/${{ env.app_name }}:${{ secrets.app_version }}"
#          tags: "cr.yandex/crp38p8uptqkachq3oo4/profile:v2"

#  terragrunt:
#    name: 'Terragrunt'
#    runs-on: ubuntu-latest
#    steps:
#      - name: 'Checkout'
#        uses: actions/checkout@master
#      - name: 'Generate authorized_key.json'
#        run: echo $AUTHORIZED_KEY ${{ env.tf_working_dir }}/authorized_key.json
#        env:
#          AUTHORIZED_KEY: ${{ secrets.AUTHORIZED_KEY }}
#      - name: 'Terragrunt Plan'
#        uses: the-commons-project/terragrunt-github-actions@master
#        with:
#          tf_actions_version: ${{ env.tf_version }}
#          tg_actions_version: ${{ env.tg_version }}
#          tf_actions_binary: true
#          tf_actions_subcommand: 'plan'
#          tf_actions_working_dir: ${{ env.tf_working_dir }}
#          tf_actions_comment: true
#        env:
#          TF_VAR_registry_id: ${{ secrets.REGISTRY_ID }}
#          TF_VAR_cloud_id: ${{ secrets.CLOUD_ID }}
#          TF_VAR_folder_id: ${{ secrets.FOLDER_ID }}
#          TF_VAR_certificate_id: ${{ secrets.CERTIFICATE_ID }}
#          TF_VAR_telegram_token: ${{ secrets.TELEGRAM_TOKEN }}
#          TF_VAR_telegram_chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
#          TF_VAR_app_version: v${{ github.event.inputs.app_version }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
